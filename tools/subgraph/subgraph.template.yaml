specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: SwapContract
    network: '{{network}}'
    source:
      address: '{{swap_address}}'
      abi: SwapContract
      startBlock: {{start_block_swap}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - AuthorizeSender
        - AuthorizeSigner
        - Cancel
        - CancelUpTo
        - RevokeSender
        - RevokeSigner
        - Swap
      abis:
        - name: SwapContract
          file: ./abis/Swap.json
      eventHandlers:
        - event: AuthorizeSender(indexed address,indexed address)
          handler: handleAuthorizeSender
        - event: AuthorizeSigner(indexed address,indexed address)
          handler: handleAuthorizeSigner
        - event: Cancel(indexed uint256,indexed address)
          handler: handleCancel
        - event: CancelUpTo(indexed uint256,indexed address)
          handler: handleCancelUpTo
        - event: RevokeSender(indexed address,indexed address)
          handler: handleRevokeSender
        - event: RevokeSigner(indexed address,indexed address)
          handler: handleRevokeSigner
        - event: Swap(indexed uint256,uint256,indexed address,uint256,uint256,address,indexed address,uint256,uint256,address,address,uint256,uint256,address)
          handler: handleSwap
      file: ./src/SwapMapping.ts
  - kind: ethereum/contract
    name: Indexer
    network: '{{network}}'
    source:
      address: '{{indexer_address}}'
      abi: Indexer
      startBlock: {{start_block_indexer}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - AddTokenToBlacklist
        - CreateIndex
        - OwnershipTransferred
        - RemoveTokenFromBlacklist
        - Stake
        - Unstake
      abis:
        - name: Indexer
          file: ./abis/Indexer.json
      eventHandlers:
        - event: AddTokenToBlacklist(address)
          handler: handleAddTokenToBlacklist
        - event: CreateIndex(indexed address,indexed address,bytes2,address)
          handler: handleCreateIndex
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: RemoveTokenFromBlacklist(address)
          handler: handleRemoveTokenFromBlacklist
        - event: Stake(indexed address,indexed address,indexed address,bytes2,uint256)
          handler: handleStake
        - event: Unstake(indexed address,indexed address,indexed address,bytes2,uint256)
          handler: handleUnstake
      file: ./src/IndexerMapping.ts
  - kind: ethereum/contract
    name: DelegateFactory
    network: '{{network}}'
    source:
      address: '{{delegateFactory_address}}'
      abi: DelegateFactory
      startBlock: {{start_block_delegateFactory}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - CreateDelegate
      abis:
        - name: DelegateFactory
          file: ./abis/DelegateFactory.json
      eventHandlers:
        - event: CreateDelegate(indexed address,address,address,indexed address,address)
          handler: handleCreateDelegate
      file: ./src/DelegateFactoryMapping.ts
  - kind: ethereum/contract
    name: SwapLightContract
    network: '{{network}}'
    source:
      address: '{{swap_light_address}}'
      abi: SwapLightContract
      startBlock: {{start_block_light}}
    mapping:
      kind: ethereum/Events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Cancel
        - CancelUpTo
        - Swap
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
        - name: SwapLightContract
          file: ./abis/Light.json
        - name: Oracle
          file: ./abis/AggregatorV3Interface.json
      eventHandlers:
        - event: Cancel(indexed uint256,indexed address)
          handler: handleCancel
        - event: Swap(indexed uint256,uint256,indexed address,address,uint256,uint256,indexed address,address,uint256)
          handler: handleSwap
      file: ./src/SwapLightMapping.ts
  - kind: ethereum/contract
    name: LockerContract
    network: '{{network}}'
    source:
      address: '{{locker_address}}'
      abi: LockerContract
      startBlock: {{start_block_locker}}
    mapping:
      kind: ethereum/Events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Lock
        - Unlock
        - SetThrottlingPercentage
        - SetThrottlingDuration
        - SetThrottlingBalance
      abis:
        - name: LockerContract
          file: ./abis/Locker.json
      eventHandlers:
        - event: Lock(address,uint256)
          handler: handleLock
        - event: Unlock(address,uint256)
          handler: handleUnlock
        - event: SetThrottlingPercentage(uint256)
          handler: handleSetThrottlingPercentage
        - event: SetThrottlingDuration(uint256)
          handler: handleSetThrottlingDuration
        - event: SetThrottlingBalance(uint256)
          handler: handleSetThrottlingBalance
      file: ./src/LockerMapping.ts
  - kind: ethereum/contract
    name: PoolContract
    network: '{{network}}'
    source:
      address: '{{pool_address}}'
      abi: PoolContract
      startBlock: {{start_block_pool}}
    mapping:
      kind: ethereum/Events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Enable
        - Withdraw
        - SetScale
        - SetMax
      abis:
        - name: PoolContract
          file: ./abis/Pool.json
      eventHandlers:
        - event: Enable(bytes32)
          handler: handleEnable
        - event: Withdraw(bytes32[],address,address,uint256)
          handler: handleWithdraw
        - event: SetScale(uint256)
          handler: handleSetScale
        - event: SetMax(uint256)
          handler: handleSetMax
      file: ./src/PoolMapping.ts

templates:
  - name: Index
    kind: ethereum/contract
    network: '{{network}}'
    source:
      abi: Index
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/IndexMapping.ts 
      entities:
        - Index
      abis:
        - name: Index
          file: ./abis/Index.json
      eventHandlers: 
        - event: SetLocator(indexed address,uint256,indexed bytes32)
          handler: handleSetLocator
        - event: UnsetLocator(indexed address)
          handler: handleUnsetLocator
  - name: Delegate
    kind: ethereum/contract
    network: '{{network}}'
    source:
      abi: Delegate
    mapping: 
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/DelegateMapping.ts
      entities:
        - Delegate
      abis:
        - name: Delegate
          file: ./abis/Delegate.json
      eventHandlers: 
        - event: SetRule(indexed address,indexed address,indexed address,uint256,uint256,uint256)
          handler: handleSetRule
        - event: UnsetRule(indexed address,indexed address,indexed address)
          handler: handleUnsetRule
        - event: ProvideOrder(indexed address,address,indexed address,indexed address,uint256,uint256,uint256)
          handler: handleProvideOrder

